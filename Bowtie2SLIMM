#/bin/bash
#aga's BOWTIE2+SLIMM Pipeline
#
#USER NEEDS TO SPECIFY:

RUNDIR=Virusseq/Humanchr1_chr11.05.02
OUTDIR=Bowtie2_slimm_human_reads_together
SLIMM_DB=databases/slimm_db_C-RVDB16.0_HUMAN_GENOME.sldb
BOWTIE_DB=databases/C-RVDBv16.bowtie2
#SAMPLESHEET="${5:-"$RUNDIR"/SampleSheet.csv}" 
BASEN=${RUNDIR##*/}


###
## PRINT CONFIGURATION
echo "[$(date)]: Running BOWTIE2 + SLIMM Pipeline with the following parameters:" >&2
echo "[$(date)]: RUNDIR = ${RUNDIR}" >&2
echo "[$(date)]: OUTPUTDIR = ${OUTDIR}" >&2
#echo "[$(date)]: SAMPLE_SHEET = ${SAMPLESHEET}" >&2
echo "[$(date)]: SLIMM_DATABASE = ${SLIMM_DB}" >&2
echo "[$(date)]: BOWTIE2_DATABASE = ${BOWTIE_DB}" >&2

### PREPARE THE SHELL 
echo "[$(date)]: Preparing shell." >&2
source activate aga #probably need to create other env for that
mkdir $OUTDIR
mkdir $OUTDIR/FLASH_OUTPUT
mkdir $OUTDIR/slimm_reports

###
## FIND ALL FASTQ FILES
FQ=$(find -L "${RUNDIR}" -name "*_R1*.fastq" -type f)
if [ -z "$FQ" ]; then
  echo "[$(date)]: No FASTQs found. Exiting..." >&2
  exit 0
else
   echo "[$(date)]: The number of reads: ls -l | wc -l" >&2 
   echo "[$(date)]: Found the following FASTQs:" >&2
   echo $FQ | sort | sed -e "s/gz /gz\n/g" | sed "s/\(^.\)/\t\1/g" >&2
fi

for FR1 in ${FQ}; do
   FR1N=${FR1##*/}
   SAMPLEN=${FR1N/_R1*/}
   
   ###1. Joining reads with FLASH
   echo "[$(date)]: FLASH starts" >&2
   flash2 -M 250 -t 24 -o $OUTDIR/FLASH_OUTPUT/${SAMPLEN} ${FR1} ${FR1/_R1/_R2} 2>&1 | tee  $OUTDIR/FLASH_OUTPUT/${SAMPLEN}_%.log
   echo "[$(date)]: FLASH done" >&2
   
   ###2.Run Bowtie2 on both joined and unjoined reads 
   echo "[$(date)]: Bowtie2 starts" >&2
   bowtie2 -x ${BOWTIE_DB} \
   -q -U $OUTDIR/FLASH_OUTPUT/${SAMPLEN}.extendedFrags.fastq \
   --no-unal --no-discordant --mm -p 10 -k 60 -X 1000 2>${OUTDIR}/${SAMPLEN}_bowtie2-merged.log | samtools view -Sb - > $OUTDIR/${SAMPLEN}.join.bam
   echo "[$(date)]: Bowtie2 finished" >&2
   bowtie2 -x ${BOWTIE_DB} \
   -1 $OUTDIR/FLASH_OUTPUT/${SAMPLEN}.notCombined_1.fastq \
   -2 $OUTDIR/FLASH_OUTPUT/${SAMPLEN}.notCombined_2.fastq \
   -q --no-unal --no-discordant --mm -p 10 -k 60 -X 1000 2>${OUTDIR}/${SAMPLEN}_bowtie2-pe.log | samtools view -Sb - > $OUTDIR/${SAMPLEN}.un.bam
   echo "[$(date)]: Bowtie2 finished" >&2
   
   ####removing the FASTQJOIN file after mapping it with bowtie2 
   #rm $OUTDIR/FLASH_OUTPUT/${SAMPLEN}.extendedFrags.fastq
   #rm $OUTDIR/FLASH_OUTPUT/${SAMPLEN}.notCombined_1.fastq
   #rm $OUTDIR/FLASH_OUTPUT/${SAMPLEN}.notCombined_2.fastq

   
   ###3. Merge the bam files with samtools 
   echo "[$(date)]: Samtools merge starts" >&2
   samtools merge $OUTDIR/${SAMPLEN}.merged.bam $OUTDIR/${SAMPLEN}.un.bam $OUTDIR/${SAMPLEN}.join.bam
   echo "[$(date)]: Samtools merge done" >&2
   
   ####removing the intermediate bam files 
   rm $OUTDIR/${SAMPLEN}.join.bam 
   rm $OUTDIR/${SAMPLEN}.un.bam
   
   ###4. Run SLIMM 
   mkdir $OUTDIR/slimm_reports/${SAMPLEN}
   echo "[$(date)]: SLIMM starts" >&2
   slimm -w 1000 -r species \
   -ro -co -o $OUTDIR/slimm_reports/${SAMPLEN} \
   ${SLIMM_DB} \
   $OUTDIR/${SAMPLEN}.merged.bam \
   > $OUTDIR/slimm_reports/${SAMPLEN}.log 2>&1
   echo "[$(date)]: SLIMM done" >&2
done
   

for FR1 in ${FQ}; do
   FR1N=${FR1##*/}
   SAMPLEN=${FR1N/_R1*/}
   ###5. Running FASTQC 
   echo "[$(date)]: Running FASTQC" >&2
   mkdir $OUTDIR/FASTQC_OUTPUT 
   fastqc -t 6 -o $OUTDIR/FASTQC_OUTPUT \
   --extract \
   --threads 22 \
   -- adapters /opt/resources/fastqc_contaminant_list.txt \
   --contaminants /opt/resources/fastqc_contaminant_list.txt \
   $OUTDIR/${SAMPLEN}.merged.bam.bam
   > $FQ.FASTQC.log 2> $FQ.FASTQC.err
   echo "[$(date)]: Fastqc finished" >&2
   
   ###6. Running multiqc
   echo "[$(date)]: Starting multiqc" >&2
   mkdir $OUTDIR/multiqc_output.${FQ}
   multiqc $OUTDIR/FASTQC_OUTPUT . --interactive > OUTDIR/multiqc_output.${FQ}
   echo "[$(date)]: Multiqc done" >&2
done 
